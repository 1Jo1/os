#!/bin/bash
set -e

source $(dirname $0)/version
cd $(dirname $0)/..

BUILD=build
INITRD_DIR=${BUILD}/initrd

echo Create initrd layout in $INITRD_DIR

rm -rf ${INITRD_DIR}
mkdir -p ${INITRD_DIR}/usr/{etc,bin,share/ros}

cp -rf assets/selinux      ${INITRD_DIR}/usr/etc
cp build/images.tar        ${INITRD_DIR}/usr/share/ros/
cp build/os-config.yml     ${INITRD_DIR}/usr/share/ros/
cp bin/ros                 ${INITRD_DIR}/usr/bin/
cp ${DOWNLOADS}/docker     ${INITRD_DIR}/usr/bin/docker
ln -s usr/bin/ros          ${INITRD_DIR}/init
ln -s bin                  ${INITRD_DIR}/usr/sbin
ln -s usr/sbin             ${INITRD_DIR}/sbin


if [ -e ${DOWNLOADS}/kernel.tar.gz ]; then
    tar xf ${DOWNLOADS}/kernel.tar.gz -C ${INITRD_DIR}/usr/ lib/
fi

if [ -e ${DOWNLOADS}/policy.29 ]; then
    mkdir -p ${INITRD_DIR}/usr/etc/selinux/ros/policy/
    cp ${DOWNLOADS}/policy.29 ${INITRD_DIR}/usr/etc/selinux/ros/policy/
fi

DFS_ARCH=$(docker create ${DFS_IMAGE}${SUFFIX})
trap "docker rm -fv ${DFS_ARCH} >/dev/null" EXIT

docker export ${DFS_ARCH} | tar xf - -C ${INITRD_DIR} --exclude=usr/bin/dockerlaunch \
                                                      --exclude=usr/bin/docker       \
                                                      --exclude=usr/share/git-core   \
                                                      --exclude=usr/bin/git          \
                                                      --exclude=usr/bin/ssh          \
                                                      --exclude=usr/libexec/git-core \
                                                      usr

tar xf ${DOWNLOADS}/kernel.tar.gz -C ${BUILD} boot/

if [ -e ${BUILD}/boot/vmlinuz-* ]; then
    mkdir -p dist/artifacts
    cp ${BUILD}/boot/vmlinuz-* dist/artifacts/vmlinuz
fi

cat /proc/sys/kernel/random/uuid > ${INITRD_DIR}/.id
